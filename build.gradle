plugins {
	id 'org.springframework.boot' version '2.2.6.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id "org.sonarqube" version "2.8"
	id 'jacoco'
}

group = 'com.neytor'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	implementation 'org.liquibase:liquibase-core'
	runtimeOnly 'org.postgresql:postgresql'
	compile 'io.springfox:springfox-swagger2:2.9.2'
	compile 'io.springfox:springfox-swagger-ui:2.9.2'
	compile 'com.google.cloud.sql:postgres-socket-factory:1.0.16'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

sonarqube {
	properties {
		property "sonar.projectKey", "vnorobio_time-spanner-software"
		property "sonar.organization", "vnorobio"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.login", "d3cd041f99e4595a2bc9a6a5581b1adf155cfa54"
	}
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
}

jacoco {
	toolVersion = "0.8.5"
	reportsDir = file("$buildDir/reports/jacoco")
}

jacocoTestReport {
	reports {
		xml.enabled false
		csv.enabled false
		html.destination file("${buildDir}/jacocoHtml")
	}
}